Description: |
  This template creates resources required for receipt and invoice processing using Textract

Parameters:
  ParseInvoicesRepoName:
    Type: String
    Description: Elastic Container Registry (ECR) name for Parse Invoices lambda function
    Default: 'textract/parse_invoices'
  ParseInvoicesImageTag:
    Type: String
    Description: Elastic Container Registry (ECR) tag for Parse Invoices lambda function
    Default: '0.0.1'
  ExpenseVerificationRepoName:
    Type: String
    Description: Elastic Container Registry (ECR) name for Expense Verification lambda function
    Default: 'textract/expense_verification'
  ExpenseVerificationImageTag:
    Type: String
    Description: Elastic Container Registry (ECR) tag forExpense Verification lambda function
    Default: '0.0.1'

Resources:
  InputBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'receipts-input-bucket-${AWS::Region}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
      LifecycleConfiguration:
        Rules:
          - Id: ArchiveObjects
            Status: Enabled
            ExpirationInDays: 365
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
      NotificationConfiguration: 
        EventBridgeConfiguration:
          EventBridgeEnabled: true
  
  ApprovedBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'approved-receipts-${AWS::Region}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
      LifecycleConfiguration:
        Rules:
          - Id: ArchiveObjects
            Status: Enabled
            ExpirationInDays: 365
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
  
  DeniedBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'denied-receipts-${AWS::Region}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
      LifecycleConfiguration:
        Rules:
          - Id: ArchiveObjects
            Status: Enabled
            ExpirationInDays: 365
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER

  ParseInvoiceLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: 'ParseInvoiceLambdaRole'
      Description: 'IAM Role for ParseInvoice Lambda'
      Policies:
        - PolicyName: parse-invoices-analyze-expense
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - textract:AnalyzeExpense
                Resource: '*'
        - PolicyName: parse-invoices-s3-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: 
                  - !Join ['/', [!GetAtt InputBucket.Arn, '*']]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  
  ExpenseVerificationLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: 'ExpenseVerificationLambdaRole'
      Description: 'IAM Role for ExpenseVerification Lambda'
      Policies:
        - PolicyName: expense-verification-s3-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: 
                  - !Join ['/', [!GetAtt InputBucket.Arn, '*']]
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: 
                  - !Join ['/', [!GetAtt ApprovedBucket.Arn, '*']]
                  - !Join ['/', [!GetAtt DeniedBucket.Arn, '*']]
        - PolicyName: expense-verification-dynamodb-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Scan
                Resource: 
                  - !GetAtt ExpenseValidationRules.Arn
        - PolicyName: expense-verification-secrets-manager-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: 
                  - !Ref OpensearchAccessCredential
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  OpensearchAccessCredential:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: Access credential for Opensearch Dashboard
      Name: OpensearchAccessCredential
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"
        PasswordLength: 15
        ExcludeCharacters: '"@/\`?:;.-,+'

  ParseInvoiceLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'ParseInvoice'
      PackageType: Image
      Code: 
        ImageUri: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ParseInvoicesRepoName}:${ParseInvoicesImageTag}'
      Description: Parses the receipts/invoices to extract key fields
      MemorySize: 512
      Role: !GetAtt ParseInvoiceLambdaRole.Arn
      Timeout: 30

  ExpenseVerificationLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'ExpenseVerification'
      PackageType: Image
      Code: 
        ImageUri: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ExpenseVerificationRepoName}:${ExpenseVerificationImageTag}'
      Description: Verifies the expense
      Environment:
        Variables:
          APPROVED_BUCKET_NAME: !Ref ApprovedBucket
          DENIED_BUCKET_NAME: !Ref DeniedBucket
          OPENSEARCH_DOMAIN: !GetAtt OpenSearchDomain.DomainEndpoint
          SECRET_ARN: !Ref OpensearchAccessCredential
      MemorySize: 512
      Role: !GetAtt ExpenseVerificationLambdaRole.Arn
      Timeout: 30

  StateExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: 'StateExecutionRole'
      Description: 'IAM Role for State Machine run'
      Policies:
        - PolicyName: state-execution-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: !Sub 'arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:Invoice-Processing-StateMachine'
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: 
                  - !GetAtt ParseInvoiceLambda.Arn
                  - !GetAtt ExpenseVerificationLambda.Arn
              - Effect: Allow
                Action:
                  - states:DescribeExecution
                Resource: !Sub 'arn:aws:states:${AWS::Region}:${AWS::AccountId}:execution:*'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /

  MyStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: Invoice-Processing-StateMachine
      DefinitionString: |-
        {
          "StartAt": "ParseInvoice",
          "States": {
            "ParseInvoice": {
              "Type": "Task",
              "Resource": "${ParseInvoiceLambdaArn}",
              "Next": "ExpenseVerification"
            },
            "ExpenseVerification": {
              "Type": "Task",
              "Resource": "${ExpenseVerificationLambdaArn}",
              "End": true
            }
          }
        }
      DefinitionSubstitutions:
        ParseInvoiceLambdaArn: !GetAtt ParseInvoiceLambda.Arn
        ExpenseVerificationLambdaArn: !GetAtt ExpenseVerificationLambda.Arn
      RoleArn: !GetAtt StateExecutionRole.Arn

  NewReceiptUpload:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: New file uploaded to input bucket
      EventBusName: default
      State: ENABLED
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket:
            name: 
            - !Ref InputBucket
      Targets:
        - Arn: !GetAtt MyStateMachine.Arn
          Id: StateMachine
          RoleArn: !GetAtt 
            - EventBridgeIAMrole
            - Arn

  EventBridgeIAMrole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub events.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: PutEventsDestinationBus
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'states:StartExecution'
                Resource:
                  - !GetAtt MyStateMachine.Arn

  ExpenseValidationRules:
    Type: 'AWS::DynamoDB::Table'
    Properties: 
      AttributeDefinitions:
        - 
          AttributeName: "ruleId"
          AttributeType: "N"
        - 
          AttributeName: "field"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "ruleId"
          KeyType: "HASH"
        - 
          AttributeName: "field"
          KeyType: "RANGE"
      TableName: "expenseValidationRules"
      BillingMode: "PAY_PER_REQUEST"

  OpenSearchDomainLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: OpenSearchDomainLog
      RetentionInDays: 14

  OpenSearchDomainLogGroupResourcePolicy:  
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: "OpenSearchDomainLogPolicy"
      PolicyDocument: "{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"OpensearchLogsToCloudWatchLogs\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": [ \"es.amazonaws.com\" ] }, \"Action\":\"logs:*\", \"Resource\": \"*\" } ] }"

  OpenSearchDomain:
    Type: 'AWS::OpenSearchService::Domain'
    Properties:
      DomainName: 'invoices-analysis'
      EncryptionAtRestOptions:
        Enabled: true
        KmsKeyId: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/es'
      DomainEndpointOptions:
        EnforceHTTPS: true
      NodeToNodeEncryptionOptions:
        Enabled: true
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: '{{resolve:secretsmanager:OpensearchAccessCredential:SecretString:username}}'
          MasterUserPassword: '{{resolve:secretsmanager:OpensearchAccessCredential:SecretString:password}}'
      SoftwareUpdateOptions:
        AutoSoftwareUpdateEnabled: true
      ClusterConfig:
        DedicatedMasterCount: 3
        DedicatedMasterEnabled: true
        DedicatedMasterType: 't3.small.search'
        InstanceCount: 2
        InstanceType: 't3.small.search'
        ZoneAwarenessEnabled: true
        ZoneAwarenessConfig:
          AvailabilityZoneCount: 2
      EBSOptions:
        EBSEnabled: true
        VolumeSize: '20'
        VolumeType: 'gp3'
      LogPublishingOptions:
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt OpenSearchDomainLogGroup.Arn
          Enabled: true
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt OpenSearchDomainLogGroup.Arn
          Enabled: true
